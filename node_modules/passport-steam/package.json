{
  "name": "passport-steam",
  "version": "1.0.8",
  "description": "Steam (OpenID) authentication strategy for Passport.",
  "author": {
    "name": "Liam Curry",
    "email": "liam@curry.name",
    "url": "http://www.liamcurry.com/"
  },
  "contributors": [
    {
      "name": "Toby Archer",
      "email": "toby@nerdping.com",
      "url": "http://github.com/mnzt"
    },
    {
      "name": "Welps",
      "url": "https://github.com/welps"
    }
  ],
  "ava": {
    "failFast": true,
    "verbose": true
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/liamcurry/passport-steam.git"
  },
  "bugs": {
    "url": "http://github.com/liamcurry/passport-steam/issues"
  },
  "main": "./lib/passport-steam",
  "dependencies": {
    "passport-openid": "^0.4.0",
    "steam-web": "0.4.0"
  },
  "devDependencies": {
    "ava": "^0.10.0",
    "ejs": "^2.4.2",
    "express": "^4.14.0",
    "express-session": "^1.13.0",
    "passport": "^0.3.2"
  },
  "scripts": {
    "test": "ava test/*.test.js",
    "example": "node examples/signon/app.js",
    "example-router": "node examples/signon/app-router.js"
  },
  "engines": {
    "node": ">= 0.4.0"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "http://www.opensource.org/licenses/MIT"
    }
  ],
  "keywords": [
    "passport",
    "steam",
    "auth",
    "authn",
    "authentication",
    "identity"
  ],
  "readme": "# Passport-Steam\n\n[Passport](https://github.com/jaredhanson/passport) strategy for authenticating\nwith [Steam](http://steamcommunity.com/) using OpenID 2.0.\n\n\n## Installation\n\n```bash\n$ npm install --save passport-steam\n```\n\n## Usage\n\n#### Configure Strategy\n\nThe Steam authentication strategy authenticates users using a steam account,\nwhich is also an OpenID 2.0 identifier.  The strategy requires a `validate`\ncallback, which accepts this identifier and calls `done` providing a user.\nAdditionally, options can be supplied to specify a return URL and realm.\n\n```javascript\npassport.use(new SteamStrategy({\n    returnURL: 'http://localhost:3000/auth/steam/return',\n    realm: 'http://localhost:3000/',\n    apiKey: 'your steam API key'\n  },\n  function(identifier, profile, done) {\n    User.findByOpenID({ openId: identifier }, function (err, user) {\n      return done(err, user);\n    });\n  }\n));\n```\n\nA Steam API key can be obtained at http://steamcommunity.com/dev/apikey. However if you wish not to use an API key, you can include `profile: false` into the SteamStrategy object, which will disable the fetching of user data.\n\n#### Authenticate Requests\n\nUse `passport.authenticate()`, specifying the `'steam'` strategy, to\nauthenticate requests.\n\nFor example, as route middleware in an [Express](http://expressjs.com/)\napplication:\n\n```javascript\napp.get('/auth/steam',\n  passport.authenticate('steam'),\n  function(req, res) {\n    // The request will be redirected to Steam for authentication, so\n    // this function will not be called.\n  });\n\napp.get('/auth/steam/return',\n  passport.authenticate('steam', { failureRedirect: '/login' }),\n  function(req, res) {\n    // Successful authentication, redirect home.\n    res.redirect('/');\n  });\n```\n\n## Examples\n\n### Basic example using Express\n\nFor a complete, working example, refer to the [signon example](https://github.com/liamcurry/passport-steam/tree/master/examples/signon) or follow the steps below. Do not forget to add your API key.\n\nTo run the example, you can perform the following from the command line:\n\n1. Clone the repository\n\n    ```git clone https://github.com/liamcurry/passport-steam.git```\n\n2. Go into the repository\n\n    ```cd passport-steam```\n\n3. Download the required dependencies\n\n    ```npm install```\n\n4. Edit `examples/signon/app.js` with your favorite text editor\n5. Update the `localhost` parameter and add your API key in this block within `examples/signon/app.js`\n\n    ```\n    returnURL: 'http://localhost:3000/auth/steam/return',\n        realm: 'http://localhost:3000/',\n        apiKey: 'Your API key here'\n    ```\n\n6. Save your changes to `examples/signon/app.js`\n7. Start the example\n\n    ```\n    npm run example\n    ```\n    \n8. Go to the address you put in `realm` in your browser.\n\n### Basic example using Express with Router\n\nFor a complete, working example, refer to the [signon example](https://github.com/liamcurry/passport-steam/tree/master/examples/signon) or follow the steps below. Do not forget to add your API key.\n\nTo run the example, you can perform the following from the command line:\n\n1. Clone the repository\n\n    ```git clone https://github.com/liamcurry/passport-steam.git```\n\n2. Go into the repository\n\n    ```cd passport-steam```\n\n3. Download the required dependencies\n\n    ```npm install```\n\n4. Edit `examples/signon/app-router.js` with your favorite text editor\n5. Update the `localhost` parameter and add your API key in this block within `examples/signon/app-router.js`\n\n    ```\n    returnURL: 'http://localhost:3000/auth/steam/return',\n        realm: 'http://localhost:3000/',\n        apiKey: 'Your API key here'\n    ```\n\n6. Save your changes to `examples/signon/app-router.js`\n7. Start the example\n\n    ```\n    npm run example-router\n    ```\n    \n8. Go to the address you put in `realm` in your browser.\n\n## Tests\n\nIf you would like to contribute, please provide accompanying tests with [AVA](https://github.com/sindresorhus/ava)\n\n```bash\n$ npm install -g ava\n$ ava\n```\n\n[![Build Status](https://secure.travis-ci.org/liamcurry/passport-steam.png)](http://travis-ci.org/liamcurry/passport-steam)\n\n## Contributors\n\n  - [Jared Hanson](http://github.com/jaredhanson)\n  - [elisee](https://github.com/elisee)\n  - [welps](https://github.com/welps)\n  - [mnzt](https://github.com/mnzt)\n  - [scholtzm](https://github.com/scholtzm)\n  - [Burnett01](https://github.com/Burnett01)\n\n## License\n\n(The MIT License)\n\nCopyright (c) 2011 Jared Hanson\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "_id": "passport-steam@1.0.8",
  "_from": "passport-steam@~1.0.8"
}
